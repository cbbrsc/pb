# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpcbin_pb2 as grpcbin__pb2


class GRPCBinStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Index = channel.unary_unary(
        '/grpcbin.GRPCBin/Index',
        request_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.IndexReply.FromString,
        )
    self.Empty = channel.unary_unary(
        '/grpcbin.GRPCBin/Empty',
        request_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.EmptyMessage.FromString,
        )
    self.DummyUnary = channel.unary_unary(
        '/grpcbin.GRPCBin/DummyUnary',
        request_serializer=grpcbin__pb2.DummyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.DummyMessage.FromString,
        )
    self.DummyServerStream = channel.unary_stream(
        '/grpcbin.GRPCBin/DummyServerStream',
        request_serializer=grpcbin__pb2.DummyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.DummyMessage.FromString,
        )
    self.DummyClientStream = channel.stream_unary(
        '/grpcbin.GRPCBin/DummyClientStream',
        request_serializer=grpcbin__pb2.DummyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.DummyMessage.FromString,
        )
    self.DummyBidirectionalStreamStream = channel.stream_stream(
        '/grpcbin.GRPCBin/DummyBidirectionalStreamStream',
        request_serializer=grpcbin__pb2.DummyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.DummyMessage.FromString,
        )
    self.SpecificError = channel.unary_unary(
        '/grpcbin.GRPCBin/SpecificError',
        request_serializer=grpcbin__pb2.SpecificErrorRequest.SerializeToString,
        response_deserializer=grpcbin__pb2.EmptyMessage.FromString,
        )
    self.RandomError = channel.unary_unary(
        '/grpcbin.GRPCBin/RandomError',
        request_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.EmptyMessage.FromString,
        )
    self.HeadersUnary = channel.unary_unary(
        '/grpcbin.GRPCBin/HeadersUnary',
        request_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.HeadersMessage.FromString,
        )
    self.NoResponseUnary = channel.unary_unary(
        '/grpcbin.GRPCBin/NoResponseUnary',
        request_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
        response_deserializer=grpcbin__pb2.EmptyMessage.FromString,
        )


class GRPCBinServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Index(self, request, context):
    """This endpoint
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Empty(self, request, context):
    """Unary endpoint that takes no argument and replies an empty message.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DummyUnary(self, request, context):
    """Unary endpoint that replies a received DummyMessage
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DummyServerStream(self, request, context):
    """Stream endpoint that sends back 10 times the received DummyMessage
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DummyClientStream(self, request_iterator, context):
    """Stream endpoint that receives 10 DummyMessages and replies with the last received one
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DummyBidirectionalStreamStream(self, request_iterator, context):
    """Stream endpoint that sends back a received DummyMessage indefinitely (chat mode)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SpecificError(self, request, context):
    """Unary endpoint that raises a specified (by code) gRPC error
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RandomError(self, request, context):
    """Unary endpoint that raises a random gRPC error
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HeadersUnary(self, request, context):
    """Unary endpoint that returns headers
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NoResponseUnary(self, request, context):
    """Unary endpoint that returns no respnose
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GRPCBinServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Index': grpc.unary_unary_rpc_method_handler(
          servicer.Index,
          request_deserializer=grpcbin__pb2.EmptyMessage.FromString,
          response_serializer=grpcbin__pb2.IndexReply.SerializeToString,
      ),
      'Empty': grpc.unary_unary_rpc_method_handler(
          servicer.Empty,
          request_deserializer=grpcbin__pb2.EmptyMessage.FromString,
          response_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
      ),
      'DummyUnary': grpc.unary_unary_rpc_method_handler(
          servicer.DummyUnary,
          request_deserializer=grpcbin__pb2.DummyMessage.FromString,
          response_serializer=grpcbin__pb2.DummyMessage.SerializeToString,
      ),
      'DummyServerStream': grpc.unary_stream_rpc_method_handler(
          servicer.DummyServerStream,
          request_deserializer=grpcbin__pb2.DummyMessage.FromString,
          response_serializer=grpcbin__pb2.DummyMessage.SerializeToString,
      ),
      'DummyClientStream': grpc.stream_unary_rpc_method_handler(
          servicer.DummyClientStream,
          request_deserializer=grpcbin__pb2.DummyMessage.FromString,
          response_serializer=grpcbin__pb2.DummyMessage.SerializeToString,
      ),
      'DummyBidirectionalStreamStream': grpc.stream_stream_rpc_method_handler(
          servicer.DummyBidirectionalStreamStream,
          request_deserializer=grpcbin__pb2.DummyMessage.FromString,
          response_serializer=grpcbin__pb2.DummyMessage.SerializeToString,
      ),
      'SpecificError': grpc.unary_unary_rpc_method_handler(
          servicer.SpecificError,
          request_deserializer=grpcbin__pb2.SpecificErrorRequest.FromString,
          response_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
      ),
      'RandomError': grpc.unary_unary_rpc_method_handler(
          servicer.RandomError,
          request_deserializer=grpcbin__pb2.EmptyMessage.FromString,
          response_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
      ),
      'HeadersUnary': grpc.unary_unary_rpc_method_handler(
          servicer.HeadersUnary,
          request_deserializer=grpcbin__pb2.EmptyMessage.FromString,
          response_serializer=grpcbin__pb2.HeadersMessage.SerializeToString,
      ),
      'NoResponseUnary': grpc.unary_unary_rpc_method_handler(
          servicer.NoResponseUnary,
          request_deserializer=grpcbin__pb2.EmptyMessage.FromString,
          response_serializer=grpcbin__pb2.EmptyMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpcbin.GRPCBin', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
