/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.grpcbin.DummyMessage', null, global);
goog.exportSymbol('proto.grpcbin.DummyMessage.Enum', null, global);
goog.exportSymbol('proto.grpcbin.DummyMessage.Sub', null, global);
goog.exportSymbol('proto.grpcbin.EmptyMessage', null, global);
goog.exportSymbol('proto.grpcbin.HeadersMessage', null, global);
goog.exportSymbol('proto.grpcbin.HeadersMessage.Values', null, global);
goog.exportSymbol('proto.grpcbin.IndexReply', null, global);
goog.exportSymbol('proto.grpcbin.IndexReply.Endpoint', null, global);
goog.exportSymbol('proto.grpcbin.SpecificErrorRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcbin.HeadersMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcbin.HeadersMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpcbin.HeadersMessage.displayName = 'proto.grpcbin.HeadersMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcbin.HeadersMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcbin.HeadersMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcbin.HeadersMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.HeadersMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, proto.grpcbin.HeadersMessage.Values.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcbin.HeadersMessage}
 */
proto.grpcbin.HeadersMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcbin.HeadersMessage;
  return proto.grpcbin.HeadersMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcbin.HeadersMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcbin.HeadersMessage}
 */
proto.grpcbin.HeadersMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.grpcbin.HeadersMessage.Values.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcbin.HeadersMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcbin.HeadersMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcbin.HeadersMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.HeadersMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.grpcbin.HeadersMessage.Values.serializeBinaryToWriter);
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcbin.HeadersMessage.Values = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcbin.HeadersMessage.Values.repeatedFields_, null);
};
goog.inherits(proto.grpcbin.HeadersMessage.Values, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpcbin.HeadersMessage.Values.displayName = 'proto.grpcbin.HeadersMessage.Values';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcbin.HeadersMessage.Values.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcbin.HeadersMessage.Values.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcbin.HeadersMessage.Values.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcbin.HeadersMessage.Values} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.HeadersMessage.Values.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcbin.HeadersMessage.Values}
 */
proto.grpcbin.HeadersMessage.Values.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcbin.HeadersMessage.Values;
  return proto.grpcbin.HeadersMessage.Values.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcbin.HeadersMessage.Values} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcbin.HeadersMessage.Values}
 */
proto.grpcbin.HeadersMessage.Values.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcbin.HeadersMessage.Values.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcbin.HeadersMessage.Values.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcbin.HeadersMessage.Values} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.HeadersMessage.Values.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array.<string>}
 */
proto.grpcbin.HeadersMessage.Values.prototype.getValuesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.grpcbin.HeadersMessage.Values.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.grpcbin.HeadersMessage.Values.prototype.addValues = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.grpcbin.HeadersMessage.Values.prototype.clearValuesList = function() {
  this.setValuesList([]);
};


/**
 * map<string, Values> Metadata = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.grpcbin.HeadersMessage.Values>}
 */
proto.grpcbin.HeadersMessage.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.grpcbin.HeadersMessage.Values>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.grpcbin.HeadersMessage.Values));
};


proto.grpcbin.HeadersMessage.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcbin.SpecificErrorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcbin.SpecificErrorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpcbin.SpecificErrorRequest.displayName = 'proto.grpcbin.SpecificErrorRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcbin.SpecificErrorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcbin.SpecificErrorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcbin.SpecificErrorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.SpecificErrorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcbin.SpecificErrorRequest}
 */
proto.grpcbin.SpecificErrorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcbin.SpecificErrorRequest;
  return proto.grpcbin.SpecificErrorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcbin.SpecificErrorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcbin.SpecificErrorRequest}
 */
proto.grpcbin.SpecificErrorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcbin.SpecificErrorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcbin.SpecificErrorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcbin.SpecificErrorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.SpecificErrorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 code = 1;
 * @return {number}
 */
proto.grpcbin.SpecificErrorRequest.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grpcbin.SpecificErrorRequest.prototype.setCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.grpcbin.SpecificErrorRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcbin.SpecificErrorRequest.prototype.setReason = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcbin.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcbin.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpcbin.EmptyMessage.displayName = 'proto.grpcbin.EmptyMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcbin.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcbin.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcbin.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcbin.EmptyMessage}
 */
proto.grpcbin.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcbin.EmptyMessage;
  return proto.grpcbin.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcbin.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcbin.EmptyMessage}
 */
proto.grpcbin.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcbin.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcbin.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcbin.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcbin.DummyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcbin.DummyMessage.repeatedFields_, null);
};
goog.inherits(proto.grpcbin.DummyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpcbin.DummyMessage.displayName = 'proto.grpcbin.DummyMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcbin.DummyMessage.repeatedFields_ = [2,4,6,8,10,12,14,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcbin.DummyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcbin.DummyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcbin.DummyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.DummyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    fString: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fStringsList: jspb.Message.getRepeatedField(msg, 2),
    fInt32: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fInt32sList: jspb.Message.getRepeatedField(msg, 4),
    fEnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    fEnumsList: jspb.Message.getRepeatedField(msg, 6),
    fSub: (f = msg.getFSub()) && proto.grpcbin.DummyMessage.Sub.toObject(includeInstance, f),
    fSubsList: jspb.Message.toObjectList(msg.getFSubsList(),
    proto.grpcbin.DummyMessage.Sub.toObject, includeInstance),
    fBool: jspb.Message.getFieldWithDefault(msg, 9, false),
    fBoolsList: jspb.Message.getRepeatedField(msg, 10),
    fInt64: jspb.Message.getFieldWithDefault(msg, 11, 0),
    fInt64sList: jspb.Message.getRepeatedField(msg, 12),
    fBytes: msg.getFBytes_asB64(),
    fBytessList: msg.getFBytessList_asB64(),
    fFloat: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    fFloatsList: jspb.Message.getRepeatedFloatingPointField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcbin.DummyMessage}
 */
proto.grpcbin.DummyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcbin.DummyMessage;
  return proto.grpcbin.DummyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcbin.DummyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcbin.DummyMessage}
 */
proto.grpcbin.DummyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFString(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFStrings(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFInt32(value);
      break;
    case 4:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setFInt32sList(value);
      break;
    case 5:
      var value = /** @type {!proto.grpcbin.DummyMessage.Enum} */ (reader.readEnum());
      msg.setFEnum(value);
      break;
    case 6:
      var value = /** @type {!Array.<!proto.grpcbin.DummyMessage.Enum>} */ (reader.readPackedEnum());
      msg.setFEnumsList(value);
      break;
    case 7:
      var value = new proto.grpcbin.DummyMessage.Sub;
      reader.readMessage(value,proto.grpcbin.DummyMessage.Sub.deserializeBinaryFromReader);
      msg.setFSub(value);
      break;
    case 8:
      var value = new proto.grpcbin.DummyMessage.Sub;
      reader.readMessage(value,proto.grpcbin.DummyMessage.Sub.deserializeBinaryFromReader);
      msg.addFSubs(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFBool(value);
      break;
    case 10:
      var value = /** @type {!Array.<boolean>} */ (reader.readPackedBool());
      msg.setFBoolsList(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFInt64(value);
      break;
    case 12:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setFInt64sList(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFBytes(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addFBytess(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFFloat(value);
      break;
    case 16:
      var value = /** @type {!Array.<number>} */ (reader.readPackedFloat());
      msg.setFFloatsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcbin.DummyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcbin.DummyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcbin.DummyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.DummyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFStringsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getFInt32();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFInt32sList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getFEnum();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getFEnumsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getFSub();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.grpcbin.DummyMessage.Sub.serializeBinaryToWriter
    );
  }
  f = message.getFSubsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.grpcbin.DummyMessage.Sub.serializeBinaryToWriter
    );
  }
  f = message.getFBool();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getFBoolsList();
  if (f.length > 0) {
    writer.writePackedBool(
      10,
      f
    );
  }
  f = message.getFInt64();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getFInt64sList();
  if (f.length > 0) {
    writer.writePackedInt64(
      12,
      f
    );
  }
  f = message.getFBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = message.getFBytessList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      14,
      f
    );
  }
  f = message.getFFloat();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getFFloatsList();
  if (f.length > 0) {
    writer.writePackedFloat(
      16,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.grpcbin.DummyMessage.Enum = {
  ENUM_0: 0,
  ENUM_1: 1,
  ENUM_2: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcbin.DummyMessage.Sub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcbin.DummyMessage.Sub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpcbin.DummyMessage.Sub.displayName = 'proto.grpcbin.DummyMessage.Sub';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcbin.DummyMessage.Sub.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcbin.DummyMessage.Sub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcbin.DummyMessage.Sub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.DummyMessage.Sub.toObject = function(includeInstance, msg) {
  var f, obj = {
    fString: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcbin.DummyMessage.Sub}
 */
proto.grpcbin.DummyMessage.Sub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcbin.DummyMessage.Sub;
  return proto.grpcbin.DummyMessage.Sub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcbin.DummyMessage.Sub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcbin.DummyMessage.Sub}
 */
proto.grpcbin.DummyMessage.Sub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcbin.DummyMessage.Sub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcbin.DummyMessage.Sub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcbin.DummyMessage.Sub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.DummyMessage.Sub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string f_string = 1;
 * @return {string}
 */
proto.grpcbin.DummyMessage.Sub.prototype.getFString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcbin.DummyMessage.Sub.prototype.setFString = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string f_string = 1;
 * @return {string}
 */
proto.grpcbin.DummyMessage.prototype.getFString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcbin.DummyMessage.prototype.setFString = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated string f_strings = 2;
 * @return {!Array.<string>}
 */
proto.grpcbin.DummyMessage.prototype.getFStringsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.grpcbin.DummyMessage.prototype.setFStringsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.grpcbin.DummyMessage.prototype.addFStrings = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.grpcbin.DummyMessage.prototype.clearFStringsList = function() {
  this.setFStringsList([]);
};


/**
 * optional int32 f_int32 = 3;
 * @return {number}
 */
proto.grpcbin.DummyMessage.prototype.getFInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.grpcbin.DummyMessage.prototype.setFInt32 = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated int32 f_int32s = 4;
 * @return {!Array.<number>}
 */
proto.grpcbin.DummyMessage.prototype.getFInt32sList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<number>} value */
proto.grpcbin.DummyMessage.prototype.setFInt32sList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.grpcbin.DummyMessage.prototype.addFInt32s = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.grpcbin.DummyMessage.prototype.clearFInt32sList = function() {
  this.setFInt32sList([]);
};


/**
 * optional Enum f_enum = 5;
 * @return {!proto.grpcbin.DummyMessage.Enum}
 */
proto.grpcbin.DummyMessage.prototype.getFEnum = function() {
  return /** @type {!proto.grpcbin.DummyMessage.Enum} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.grpcbin.DummyMessage.Enum} value */
proto.grpcbin.DummyMessage.prototype.setFEnum = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated Enum f_enums = 6;
 * @return {!Array.<!proto.grpcbin.DummyMessage.Enum>}
 */
proto.grpcbin.DummyMessage.prototype.getFEnumsList = function() {
  return /** @type {!Array.<!proto.grpcbin.DummyMessage.Enum>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<!proto.grpcbin.DummyMessage.Enum>} value */
proto.grpcbin.DummyMessage.prototype.setFEnumsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.grpcbin.DummyMessage.Enum} value
 * @param {number=} opt_index
 */
proto.grpcbin.DummyMessage.prototype.addFEnums = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.grpcbin.DummyMessage.prototype.clearFEnumsList = function() {
  this.setFEnumsList([]);
};


/**
 * optional Sub f_sub = 7;
 * @return {?proto.grpcbin.DummyMessage.Sub}
 */
proto.grpcbin.DummyMessage.prototype.getFSub = function() {
  return /** @type{?proto.grpcbin.DummyMessage.Sub} */ (
    jspb.Message.getWrapperField(this, proto.grpcbin.DummyMessage.Sub, 7));
};


/** @param {?proto.grpcbin.DummyMessage.Sub|undefined} value */
proto.grpcbin.DummyMessage.prototype.setFSub = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.grpcbin.DummyMessage.prototype.clearFSub = function() {
  this.setFSub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grpcbin.DummyMessage.prototype.hasFSub = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Sub f_subs = 8;
 * @return {!Array.<!proto.grpcbin.DummyMessage.Sub>}
 */
proto.grpcbin.DummyMessage.prototype.getFSubsList = function() {
  return /** @type{!Array.<!proto.grpcbin.DummyMessage.Sub>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcbin.DummyMessage.Sub, 8));
};


/** @param {!Array.<!proto.grpcbin.DummyMessage.Sub>} value */
proto.grpcbin.DummyMessage.prototype.setFSubsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.grpcbin.DummyMessage.Sub=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcbin.DummyMessage.Sub}
 */
proto.grpcbin.DummyMessage.prototype.addFSubs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.grpcbin.DummyMessage.Sub, opt_index);
};


proto.grpcbin.DummyMessage.prototype.clearFSubsList = function() {
  this.setFSubsList([]);
};


/**
 * optional bool f_bool = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.grpcbin.DummyMessage.prototype.getFBool = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.grpcbin.DummyMessage.prototype.setFBool = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * repeated bool f_bools = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {!Array.<boolean>}
 */
proto.grpcbin.DummyMessage.prototype.getFBoolsList = function() {
  return /** @type {!Array.<boolean>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array.<boolean>} value */
proto.grpcbin.DummyMessage.prototype.setFBoolsList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!boolean} value
 * @param {number=} opt_index
 */
proto.grpcbin.DummyMessage.prototype.addFBools = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.grpcbin.DummyMessage.prototype.clearFBoolsList = function() {
  this.setFBoolsList([]);
};


/**
 * optional int64 f_int64 = 11;
 * @return {number}
 */
proto.grpcbin.DummyMessage.prototype.getFInt64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.grpcbin.DummyMessage.prototype.setFInt64 = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * repeated int64 f_int64s = 12;
 * @return {!Array.<number>}
 */
proto.grpcbin.DummyMessage.prototype.getFInt64sList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array.<number>} value */
proto.grpcbin.DummyMessage.prototype.setFInt64sList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.grpcbin.DummyMessage.prototype.addFInt64s = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.grpcbin.DummyMessage.prototype.clearFInt64sList = function() {
  this.setFInt64sList([]);
};


/**
 * optional bytes f_bytes = 13;
 * @return {!(string|Uint8Array)}
 */
proto.grpcbin.DummyMessage.prototype.getFBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes f_bytes = 13;
 * This is a type-conversion wrapper around `getFBytes()`
 * @return {string}
 */
proto.grpcbin.DummyMessage.prototype.getFBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFBytes()));
};


/**
 * optional bytes f_bytes = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFBytes()`
 * @return {!Uint8Array}
 */
proto.grpcbin.DummyMessage.prototype.getFBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFBytes()));
};


/** @param {!(string|Uint8Array)} value */
proto.grpcbin.DummyMessage.prototype.setFBytes = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * repeated bytes f_bytess = 14;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.grpcbin.DummyMessage.prototype.getFBytessList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * repeated bytes f_bytess = 14;
 * This is a type-conversion wrapper around `getFBytessList()`
 * @return {!Array.<string>}
 */
proto.grpcbin.DummyMessage.prototype.getFBytessList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
      this.getFBytessList()));
};


/**
 * repeated bytes f_bytess = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFBytessList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.grpcbin.DummyMessage.prototype.getFBytessList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getFBytessList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.grpcbin.DummyMessage.prototype.setFBytessList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.grpcbin.DummyMessage.prototype.addFBytess = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.grpcbin.DummyMessage.prototype.clearFBytessList = function() {
  this.setFBytessList([]);
};


/**
 * optional float f_float = 15;
 * @return {number}
 */
proto.grpcbin.DummyMessage.prototype.getFFloat = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.grpcbin.DummyMessage.prototype.setFFloat = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * repeated float f_floats = 16;
 * @return {!Array.<number>}
 */
proto.grpcbin.DummyMessage.prototype.getFFloatsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 16));
};


/** @param {!Array.<number>} value */
proto.grpcbin.DummyMessage.prototype.setFFloatsList = function(value) {
  jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.grpcbin.DummyMessage.prototype.addFFloats = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


proto.grpcbin.DummyMessage.prototype.clearFFloatsList = function() {
  this.setFFloatsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcbin.IndexReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpcbin.IndexReply.repeatedFields_, null);
};
goog.inherits(proto.grpcbin.IndexReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpcbin.IndexReply.displayName = 'proto.grpcbin.IndexReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpcbin.IndexReply.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcbin.IndexReply.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcbin.IndexReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcbin.IndexReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.IndexReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endpointsList: jspb.Message.toObjectList(msg.getEndpointsList(),
    proto.grpcbin.IndexReply.Endpoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcbin.IndexReply}
 */
proto.grpcbin.IndexReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcbin.IndexReply;
  return proto.grpcbin.IndexReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcbin.IndexReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcbin.IndexReply}
 */
proto.grpcbin.IndexReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = new proto.grpcbin.IndexReply.Endpoint;
      reader.readMessage(value,proto.grpcbin.IndexReply.Endpoint.deserializeBinaryFromReader);
      msg.addEndpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcbin.IndexReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcbin.IndexReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcbin.IndexReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.IndexReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndpointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grpcbin.IndexReply.Endpoint.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpcbin.IndexReply.Endpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpcbin.IndexReply.Endpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grpcbin.IndexReply.Endpoint.displayName = 'proto.grpcbin.IndexReply.Endpoint';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpcbin.IndexReply.Endpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.grpcbin.IndexReply.Endpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpcbin.IndexReply.Endpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.IndexReply.Endpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpcbin.IndexReply.Endpoint}
 */
proto.grpcbin.IndexReply.Endpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpcbin.IndexReply.Endpoint;
  return proto.grpcbin.IndexReply.Endpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpcbin.IndexReply.Endpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpcbin.IndexReply.Endpoint}
 */
proto.grpcbin.IndexReply.Endpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpcbin.IndexReply.Endpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpcbin.IndexReply.Endpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpcbin.IndexReply.Endpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpcbin.IndexReply.Endpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.grpcbin.IndexReply.Endpoint.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcbin.IndexReply.Endpoint.prototype.setPath = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.grpcbin.IndexReply.Endpoint.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.grpcbin.IndexReply.Endpoint.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.grpcbin.IndexReply.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grpcbin.IndexReply.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated Endpoint endpoints = 2;
 * @return {!Array.<!proto.grpcbin.IndexReply.Endpoint>}
 */
proto.grpcbin.IndexReply.prototype.getEndpointsList = function() {
  return /** @type{!Array.<!proto.grpcbin.IndexReply.Endpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpcbin.IndexReply.Endpoint, 2));
};


/** @param {!Array.<!proto.grpcbin.IndexReply.Endpoint>} value */
proto.grpcbin.IndexReply.prototype.setEndpointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grpcbin.IndexReply.Endpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpcbin.IndexReply.Endpoint}
 */
proto.grpcbin.IndexReply.prototype.addEndpoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grpcbin.IndexReply.Endpoint, opt_index);
};


proto.grpcbin.IndexReply.prototype.clearEndpointsList = function() {
  this.setEndpointsList([]);
};


goog.object.extend(exports, proto.grpcbin);
