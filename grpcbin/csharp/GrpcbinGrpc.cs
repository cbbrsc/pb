// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcbin.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Grpcbin {
  public static partial class GRPCBin
  {
    static readonly string __ServiceName = "grpcbin.GRPCBin";

    static readonly grpc::Marshaller<global::Grpcbin.EmptyMessage> __Marshaller_EmptyMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcbin.EmptyMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpcbin.IndexReply> __Marshaller_IndexReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcbin.IndexReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpcbin.DummyMessage> __Marshaller_DummyMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcbin.DummyMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpcbin.SpecificErrorRequest> __Marshaller_SpecificErrorRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcbin.SpecificErrorRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpcbin.HeadersMessage> __Marshaller_HeadersMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcbin.HeadersMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.IndexReply> __Method_Index = new grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.IndexReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Index",
        __Marshaller_EmptyMessage,
        __Marshaller_IndexReply);

    static readonly grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.EmptyMessage> __Method_Empty = new grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Empty",
        __Marshaller_EmptyMessage,
        __Marshaller_EmptyMessage);

    static readonly grpc::Method<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage> __Method_DummyUnary = new grpc::Method<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DummyUnary",
        __Marshaller_DummyMessage,
        __Marshaller_DummyMessage);

    static readonly grpc::Method<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage> __Method_DummyServerStream = new grpc::Method<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "DummyServerStream",
        __Marshaller_DummyMessage,
        __Marshaller_DummyMessage);

    static readonly grpc::Method<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage> __Method_DummyClientStream = new grpc::Method<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "DummyClientStream",
        __Marshaller_DummyMessage,
        __Marshaller_DummyMessage);

    static readonly grpc::Method<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage> __Method_DummyBidirectionalStreamStream = new grpc::Method<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "DummyBidirectionalStreamStream",
        __Marshaller_DummyMessage,
        __Marshaller_DummyMessage);

    static readonly grpc::Method<global::Grpcbin.SpecificErrorRequest, global::Grpcbin.EmptyMessage> __Method_SpecificError = new grpc::Method<global::Grpcbin.SpecificErrorRequest, global::Grpcbin.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SpecificError",
        __Marshaller_SpecificErrorRequest,
        __Marshaller_EmptyMessage);

    static readonly grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.EmptyMessage> __Method_RandomError = new grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RandomError",
        __Marshaller_EmptyMessage,
        __Marshaller_EmptyMessage);

    static readonly grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.HeadersMessage> __Method_HeadersUnary = new grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.HeadersMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HeadersUnary",
        __Marshaller_EmptyMessage,
        __Marshaller_HeadersMessage);

    static readonly grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.EmptyMessage> __Method_NoResponseUnary = new grpc::Method<global::Grpcbin.EmptyMessage, global::Grpcbin.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "NoResponseUnary",
        __Marshaller_EmptyMessage,
        __Marshaller_EmptyMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Grpcbin.GrpcbinReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GRPCBin</summary>
    public abstract partial class GRPCBinBase
    {
      /// <summary>
      /// This endpoint
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Grpcbin.IndexReply> Index(global::Grpcbin.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unary endpoint that takes no argument and replies an empty message.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Grpcbin.EmptyMessage> Empty(global::Grpcbin.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unary endpoint that replies a received DummyMessage
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Grpcbin.DummyMessage> DummyUnary(global::Grpcbin.DummyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stream endpoint that sends back 10 times the received DummyMessage
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task DummyServerStream(global::Grpcbin.DummyMessage request, grpc::IServerStreamWriter<global::Grpcbin.DummyMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stream endpoint that receives 10 DummyMessages and replies with the last received one
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Grpcbin.DummyMessage> DummyClientStream(grpc::IAsyncStreamReader<global::Grpcbin.DummyMessage> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stream endpoint that sends back a received DummyMessage indefinitely (chat mode)
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task DummyBidirectionalStreamStream(grpc::IAsyncStreamReader<global::Grpcbin.DummyMessage> requestStream, grpc::IServerStreamWriter<global::Grpcbin.DummyMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unary endpoint that raises a specified (by code) gRPC error
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Grpcbin.EmptyMessage> SpecificError(global::Grpcbin.SpecificErrorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unary endpoint that raises a random gRPC error
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Grpcbin.EmptyMessage> RandomError(global::Grpcbin.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unary endpoint that returns headers
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Grpcbin.HeadersMessage> HeadersUnary(global::Grpcbin.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unary endpoint that returns no respnose
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Grpcbin.EmptyMessage> NoResponseUnary(global::Grpcbin.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GRPCBin</summary>
    public partial class GRPCBinClient : grpc::ClientBase<GRPCBinClient>
    {
      /// <summary>Creates a new client for GRPCBin</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GRPCBinClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GRPCBin that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GRPCBinClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GRPCBinClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GRPCBinClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// This endpoint
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.IndexReply Index(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Index(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This endpoint
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.IndexReply Index(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Index, null, options, request);
      }
      /// <summary>
      /// This endpoint
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.IndexReply> IndexAsync(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return IndexAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This endpoint
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.IndexReply> IndexAsync(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Index, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that takes no argument and replies an empty message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.EmptyMessage Empty(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Empty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that takes no argument and replies an empty message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.EmptyMessage Empty(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Empty, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that takes no argument and replies an empty message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.EmptyMessage> EmptyAsync(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EmptyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that takes no argument and replies an empty message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.EmptyMessage> EmptyAsync(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Empty, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that replies a received DummyMessage
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.DummyMessage DummyUnary(global::Grpcbin.DummyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DummyUnary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that replies a received DummyMessage
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.DummyMessage DummyUnary(global::Grpcbin.DummyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DummyUnary, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that replies a received DummyMessage
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.DummyMessage> DummyUnaryAsync(global::Grpcbin.DummyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DummyUnaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that replies a received DummyMessage
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.DummyMessage> DummyUnaryAsync(global::Grpcbin.DummyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DummyUnary, null, options, request);
      }
      /// <summary>
      /// Stream endpoint that sends back 10 times the received DummyMessage
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::Grpcbin.DummyMessage> DummyServerStream(global::Grpcbin.DummyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DummyServerStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stream endpoint that sends back 10 times the received DummyMessage
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::Grpcbin.DummyMessage> DummyServerStream(global::Grpcbin.DummyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_DummyServerStream, null, options, request);
      }
      /// <summary>
      /// Stream endpoint that receives 10 DummyMessages and replies with the last received one
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncClientStreamingCall<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage> DummyClientStream(grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DummyClientStream(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stream endpoint that receives 10 DummyMessages and replies with the last received one
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncClientStreamingCall<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage> DummyClientStream(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_DummyClientStream, null, options);
      }
      /// <summary>
      /// Stream endpoint that sends back a received DummyMessage indefinitely (chat mode)
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncDuplexStreamingCall<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage> DummyBidirectionalStreamStream(grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DummyBidirectionalStreamStream(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stream endpoint that sends back a received DummyMessage indefinitely (chat mode)
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncDuplexStreamingCall<global::Grpcbin.DummyMessage, global::Grpcbin.DummyMessage> DummyBidirectionalStreamStream(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_DummyBidirectionalStreamStream, null, options);
      }
      /// <summary>
      /// Unary endpoint that raises a specified (by code) gRPC error
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.EmptyMessage SpecificError(global::Grpcbin.SpecificErrorRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SpecificError(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that raises a specified (by code) gRPC error
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.EmptyMessage SpecificError(global::Grpcbin.SpecificErrorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SpecificError, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that raises a specified (by code) gRPC error
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.EmptyMessage> SpecificErrorAsync(global::Grpcbin.SpecificErrorRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SpecificErrorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that raises a specified (by code) gRPC error
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.EmptyMessage> SpecificErrorAsync(global::Grpcbin.SpecificErrorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SpecificError, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that raises a random gRPC error
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.EmptyMessage RandomError(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RandomError(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that raises a random gRPC error
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.EmptyMessage RandomError(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RandomError, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that raises a random gRPC error
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.EmptyMessage> RandomErrorAsync(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RandomErrorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that raises a random gRPC error
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.EmptyMessage> RandomErrorAsync(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RandomError, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that returns headers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.HeadersMessage HeadersUnary(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return HeadersUnary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that returns headers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.HeadersMessage HeadersUnary(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_HeadersUnary, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that returns headers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.HeadersMessage> HeadersUnaryAsync(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return HeadersUnaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that returns headers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.HeadersMessage> HeadersUnaryAsync(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_HeadersUnary, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that returns no respnose
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.EmptyMessage NoResponseUnary(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return NoResponseUnary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that returns no respnose
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Grpcbin.EmptyMessage NoResponseUnary(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NoResponseUnary, null, options, request);
      }
      /// <summary>
      /// Unary endpoint that returns no respnose
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.EmptyMessage> NoResponseUnaryAsync(global::Grpcbin.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return NoResponseUnaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unary endpoint that returns no respnose
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Grpcbin.EmptyMessage> NoResponseUnaryAsync(global::Grpcbin.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NoResponseUnary, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GRPCBinClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GRPCBinClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GRPCBinBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Index, serviceImpl.Index)
          .AddMethod(__Method_Empty, serviceImpl.Empty)
          .AddMethod(__Method_DummyUnary, serviceImpl.DummyUnary)
          .AddMethod(__Method_DummyServerStream, serviceImpl.DummyServerStream)
          .AddMethod(__Method_DummyClientStream, serviceImpl.DummyClientStream)
          .AddMethod(__Method_DummyBidirectionalStreamStream, serviceImpl.DummyBidirectionalStreamStream)
          .AddMethod(__Method_SpecificError, serviceImpl.SpecificError)
          .AddMethod(__Method_RandomError, serviceImpl.RandomError)
          .AddMethod(__Method_HeadersUnary, serviceImpl.HeadersUnary)
          .AddMethod(__Method_NoResponseUnary, serviceImpl.NoResponseUnary).Build();
    }

  }
}
#endregion
