# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import addsvc_pb2 as addsvc__pb2


class AddStub(object):
  """The Add service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Sum = channel.unary_unary(
        '/addsvc.Add/Sum',
        request_serializer=addsvc__pb2.SumRequest.SerializeToString,
        response_deserializer=addsvc__pb2.SumReply.FromString,
        )
    self.Concat = channel.unary_unary(
        '/addsvc.Add/Concat',
        request_serializer=addsvc__pb2.ConcatRequest.SerializeToString,
        response_deserializer=addsvc__pb2.ConcatReply.FromString,
        )


class AddServicer(object):
  """The Add service definition.
  """

  def Sum(self, request, context):
    """Sums two integers.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Concat(self, request, context):
    """Concatenates two strings
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AddServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Sum': grpc.unary_unary_rpc_method_handler(
          servicer.Sum,
          request_deserializer=addsvc__pb2.SumRequest.FromString,
          response_serializer=addsvc__pb2.SumReply.SerializeToString,
      ),
      'Concat': grpc.unary_unary_rpc_method_handler(
          servicer.Concat,
          request_deserializer=addsvc__pb2.ConcatRequest.FromString,
          response_serializer=addsvc__pb2.ConcatReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'addsvc.Add', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
