// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: a_bit_of_everything.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.Gateway.Examples.Examplepb {

  /// <summary>Holder for reflection information generated from a_bit_of_everything.proto</summary>
  public static partial class ABitOfEverythingReflection {

    #region Descriptor
    /// <summary>File descriptor for a_bit_of_everything.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ABitOfEverythingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlhX2JpdF9vZl9ldmVyeXRoaW5nLnByb3RvEh9ncnBjLmdhdGV3YXkuZXhh",
            "bXBsZXMuZXhhbXBsZXBiGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3Rv",
            "Ghtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aHmdvb2dsZS9wcm90b2J1",
            "Zi9kdXJhdGlvbi5wcm90bxoaZXhhbXBsZXMvc3ViL21lc3NhZ2UucHJvdG8a",
            "G2V4YW1wbGVzL3N1YjIvbWVzc2FnZS5wcm90bxofZ29vZ2xlL3Byb3RvYnVm",
            "L3RpbWVzdGFtcC5wcm90bxoscHJvdG9jLWdlbi1zd2FnZ2VyL29wdGlvbnMv",
            "YW5ub3RhdGlvbnMucHJvdG8igw0KEEFCaXRPZkV2ZXJ5dGhpbmcSTwoNc2lu",
            "Z2xlX25lc3RlZBgZIAEoCzI4LmdycGMuZ2F0ZXdheS5leGFtcGxlcy5leGFt",
            "cGxlcGIuQUJpdE9mRXZlcnl0aGluZy5OZXN0ZWQSDAoEdXVpZBgBIAEoCRJI",
            "CgZuZXN0ZWQYAiADKAsyOC5ncnBjLmdhdGV3YXkuZXhhbXBsZXMuZXhhbXBs",
            "ZXBiLkFCaXRPZkV2ZXJ5dGhpbmcuTmVzdGVkEhMKC2Zsb2F0X3ZhbHVlGAMg",
            "ASgCEhQKDGRvdWJsZV92YWx1ZRgEIAEoARITCgtpbnQ2NF92YWx1ZRgFIAEo",
            "AxIUCgx1aW50NjRfdmFsdWUYBiABKAQSEwoLaW50MzJfdmFsdWUYByABKAUS",
            "FQoNZml4ZWQ2NF92YWx1ZRgIIAEoBhIVCg1maXhlZDMyX3ZhbHVlGAkgASgH",
            "EhIKCmJvb2xfdmFsdWUYCiABKAgSFAoMc3RyaW5nX3ZhbHVlGAsgASgJEhMK",
            "C2J5dGVzX3ZhbHVlGB0gASgMEhQKDHVpbnQzMl92YWx1ZRgNIAEoDRJACgpl",
            "bnVtX3ZhbHVlGA4gASgOMiwuZ3JwYy5nYXRld2F5LmV4YW1wbGVzLmV4YW1w",
            "bGVwYi5OdW1lcmljRW51bRIWCg5zZml4ZWQzMl92YWx1ZRgPIAEoDxIWCg5z",
            "Zml4ZWQ2NF92YWx1ZRgQIAEoEBIUCgxzaW50MzJfdmFsdWUYESABKBESFAoM",
            "c2ludDY0X3ZhbHVlGBIgASgSEh0KFXJlcGVhdGVkX3N0cmluZ192YWx1ZRgT",
            "IAMoCRItCgtvbmVvZl9lbXB0eRgUIAEoCzIWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eUgAEhYKDG9uZW9mX3N0cmluZxgVIAEoCUgAElIKCW1hcF92YWx1ZRgW",
            "IAMoCzI/LmdycGMuZ2F0ZXdheS5leGFtcGxlcy5leGFtcGxlcGIuQUJpdE9m",
            "RXZlcnl0aGluZy5NYXBWYWx1ZUVudHJ5EmUKE21hcHBlZF9zdHJpbmdfdmFs",
            "dWUYFyADKAsySC5ncnBjLmdhdGV3YXkuZXhhbXBsZXMuZXhhbXBsZXBiLkFC",
            "aXRPZkV2ZXJ5dGhpbmcuTWFwcGVkU3RyaW5nVmFsdWVFbnRyeRJlChNtYXBw",
            "ZWRfbmVzdGVkX3ZhbHVlGBggAygLMkguZ3JwYy5nYXRld2F5LmV4YW1wbGVz",
            "LmV4YW1wbGVwYi5BQml0T2ZFdmVyeXRoaW5nLk1hcHBlZE5lc3RlZFZhbHVl",
            "RW50cnkSIAoYbm9uQ29udmVudGlvbmFsTmFtZVZhbHVlGBogASgJEjMKD3Rp",
            "bWVzdGFtcF92YWx1ZRgbIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASSQoTcmVwZWF0ZWRfZW51bV92YWx1ZRgcIAMoDjIsLmdycGMuZ2F0ZXdh",
            "eS5leGFtcGxlcy5leGFtcGxlcGIuTnVtZXJpY0VudW0algEKBk5lc3RlZBIM",
            "CgRuYW1lGAEgASgJEg4KBmFtb3VudBgCIAEoDRJNCgJvaxgDIAEoDjJBLmdy",
            "cGMuZ2F0ZXdheS5leGFtcGxlcy5leGFtcGxlcGIuQUJpdE9mRXZlcnl0aGlu",
            "Zy5OZXN0ZWQuRGVlcEVudW0iHwoIRGVlcEVudW0SCQoFRkFMU0UQABIICgRU",
            "UlVFEAEaXQoNTWFwVmFsdWVFbnRyeRILCgNrZXkYASABKAkSOwoFdmFsdWUY",
            "AiABKA4yLC5ncnBjLmdhdGV3YXkuZXhhbXBsZXMuZXhhbXBsZXBiLk51bWVy",
            "aWNFbnVtOgI4ARo4ChZNYXBwZWRTdHJpbmdWYWx1ZUVudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoCToCOAEacgoWTWFwcGVkTmVzdGVkVmFsdWVF",
            "bnRyeRILCgNrZXkYASABKAkSRwoFdmFsdWUYAiABKAsyOC5ncnBjLmdhdGV3",
            "YXkuZXhhbXBsZXMuZXhhbXBsZXBiLkFCaXRPZkV2ZXJ5dGhpbmcuTmVzdGVk",
            "OgI4ATpbkkFYKlYKJEZpbmQgb3V0IG1vcmUgYWJvdXQgQUJpdE9mRXZlcnl0",
            "aGluZxIuaHR0cHM6Ly9naXRodWIuY29tL2dycGMtZWNvc3lzdGVtL2dycGMt",
            "Z2F0ZXdheUINCgtvbmVvZl92YWx1ZSIUCgRCb2R5EgwKBG5hbWUYASABKAki",
            "UgoPTWVzc2FnZVdpdGhCb2R5EgoKAmlkGAEgASgJEjMKBGRhdGEYAiABKAsy",
            "JS5ncnBjLmdhdGV3YXkuZXhhbXBsZXMuZXhhbXBsZXBiLkJvZHkqIAoLTnVt",
            "ZXJpY0VudW0SCAoEWkVSTxAAEgcKA09ORRABMrETChdBQml0T2ZFdmVyeXRo",
            "aW5nU2VydmljZRKeAwoGQ3JlYXRlEjEuZ3JwYy5nYXRld2F5LmV4YW1wbGVz",
            "LmV4YW1wbGVwYi5BQml0T2ZFdmVyeXRoaW5nGjEuZ3JwYy5nYXRld2F5LmV4",
            "YW1wbGVzLmV4YW1wbGVwYi5BQml0T2ZFdmVyeXRoaW5nIq0CgtPkkwKmAiKj",
            "Ai92MS9leGFtcGxlL2FfYml0X29mX2V2ZXJ5dGhpbmcve2Zsb2F0X3ZhbHVl",
            "fS97ZG91YmxlX3ZhbHVlfS97aW50NjRfdmFsdWV9L3NlcGFyYXRvci97dWlu",
            "dDY0X3ZhbHVlfS97aW50MzJfdmFsdWV9L3tmaXhlZDY0X3ZhbHVlfS97Zml4",
            "ZWQzMl92YWx1ZX0ve2Jvb2xfdmFsdWV9L3tzdHJpbmdfdmFsdWU9c3RycHJl",
            "Zml4Lyp9L3t1aW50MzJfdmFsdWV9L3tzZml4ZWQzMl92YWx1ZX0ve3NmaXhl",
            "ZDY0X3ZhbHVlfS97c2ludDMyX3ZhbHVlfS97c2ludDY0X3ZhbHVlfS97bm9u",
            "Q29udmVudGlvbmFsTmFtZVZhbHVlfRKeAQoKQ3JlYXRlQm9keRIxLmdycGMu",
            "Z2F0ZXdheS5leGFtcGxlcy5leGFtcGxlcGIuQUJpdE9mRXZlcnl0aGluZxox",
            "LmdycGMuZ2F0ZXdheS5leGFtcGxlcy5leGFtcGxlcGIuQUJpdE9mRXZlcnl0",
            "aGluZyIqgtPkkwIkIh8vdjEvZXhhbXBsZS9hX2JpdF9vZl9ldmVyeXRoaW5n",
            "OgEqEnwKBkxvb2t1cBIPLnN1YjIuSWRNZXNzYWdlGjEuZ3JwYy5nYXRld2F5",
            "LmV4YW1wbGVzLmV4YW1wbGVwYi5BQml0T2ZFdmVyeXRoaW5nIi6C0+STAigS",
            "Ji92MS9leGFtcGxlL2FfYml0X29mX2V2ZXJ5dGhpbmcve3V1aWR9EoYBCgZV",
            "cGRhdGUSMS5ncnBjLmdhdGV3YXkuZXhhbXBsZXMuZXhhbXBsZXBiLkFCaXRP",
            "ZkV2ZXJ5dGhpbmcaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiMYLT5JMCKxom",
            "L3YxL2V4YW1wbGUvYV9iaXRfb2ZfZXZlcnl0aGluZy97dXVpZH06ASoSjwEK",
            "BkRlbGV0ZRIPLnN1YjIuSWRNZXNzYWdlGhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5IlyC0+STAigqJi92MS9leGFtcGxlL2FfYml0X29mX2V2ZXJ5dGhpbmcv",
            "e3V1aWR9kkErYikKDgoKQXBpS2V5QXV0aBIAChcKBk9BdXRoMhINCgRyZWFk",
            "CgV3cml0ZRLhAQoIR2V0UXVlcnkSMS5ncnBjLmdhdGV3YXkuZXhhbXBsZXMu",
            "ZXhhbXBsZXBiLkFCaXRPZkV2ZXJ5dGhpbmcaFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkiiQGC0+STAi4SLC92MS9leGFtcGxlL2FfYml0X29mX2V2ZXJ5dGhp",
            "bmcvcXVlcnkve3V1aWR9kkFSIk4KHEZpbmQgb3V0IG1vcmUgYWJvdXQgR2V0",
            "UXVlcnkSLmh0dHBzOi8vZ2l0aHViLmNvbS9ncnBjLWVjb3N5c3RlbS9ncnBj",
            "LWdhdGV3YXlYARLHAgoERWNobxIoLmdycGMuZ2F0ZXdheS5leGFtcGxlcy5z",
            "dWIuU3RyaW5nTWVzc2FnZRooLmdycGMuZ2F0ZXdheS5leGFtcGxlcy5zdWIu",
            "U3RyaW5nTWVzc2FnZSLqAYLT5JMCXRIsL3YxL2V4YW1wbGUvYV9iaXRfb2Zf",
            "ZXZlcnl0aGluZy9lY2hvL3t2YWx1ZX1aGSIQL3YyL2V4YW1wbGUvZWNobzoF",
            "dmFsdWVaEhIQL3YyL2V4YW1wbGUvZWNob5JBgwEKDGVjaG8gc2VydmljZQoI",
            "ZWNobyBycGMSEVN1bW1hcnk6IEVjaG8gcnBjGhBEZXNjcmlwdGlvbiBFY2hv",
            "IkQKEkZpbmQgb3V0IG1vcmUgRWNobxIuaHR0cHM6Ly9naXRodWIuY29tL2dy",
            "cGMtZWNvc3lzdGVtL2dycGMtZ2F0ZXdheRK1AQoMRGVlcFBhdGhFY2hvEjEu",
            "Z3JwYy5nYXRld2F5LmV4YW1wbGVzLmV4YW1wbGVwYi5BQml0T2ZFdmVyeXRo",
            "aW5nGjEuZ3JwYy5nYXRld2F5LmV4YW1wbGVzLmV4YW1wbGVwYi5BQml0T2ZF",
            "dmVyeXRoaW5nIj+C0+STAjkiNC92MS9leGFtcGxlL2FfYml0X29mX2V2ZXJ5",
            "dGhpbmcve3NpbmdsZV9uZXN0ZWQubmFtZX06ASoSQQoKTm9CaW5kaW5ncxIZ",
            "Lmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eSIAElYKB1RpbWVvdXQSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkiG4LT5JMCFRITL3YyL2V4YW1wbGUvdGlt",
            "ZW91dBJoChBFcnJvcldpdGhEZXRhaWxzEhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IiSC0+STAh4SHC92Mi9leGFt",
            "cGxlL2Vycm9yd2l0aGRldGFpbHMShwEKEkdldE1lc3NhZ2VXaXRoQm9keRIw",
            "LmdycGMuZ2F0ZXdheS5leGFtcGxlcy5leGFtcGxlcGIuTWVzc2FnZVdpdGhC",
            "b2R5GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IieC0+STAiEiGS92Mi9leGFt",
            "cGxlL3dpdGhib2R5L3tpZH06BGRhdGESgwEKEVBvc3RXaXRoRW1wdHlCb2R5",
            "EiUuZ3JwYy5nYXRld2F5LmV4YW1wbGVzLmV4YW1wbGVwYi5Cb2R5GhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5Ii+C0+STAikiJC92Mi9leGFtcGxlL3Bvc3R3",
            "aXRoZW1wdHlib2R5L3tuYW1lfToBKhq/AZJBuwESZkFCaXRPZkV2ZXJ5dGhp",
            "bmdTZXJ2aWNlIGRlc2NyaXB0aW9uIC0tIHdoaWNoIHNob3VsZCBub3QgYmUg",
            "dXNlZCBpbiBwbGFjZSBvZiB0aGUgZG9jdW1lbnRhdGlvbiBjb21tZW50IRpR",
            "Ch9GaW5kIG91dCBtb3JlIGFib3V0IEVjaG9TZXJ2aWNlEi5odHRwczovL2dp",
            "dGh1Yi5jb20vZ3JwYy1lY29zeXN0ZW0vZ3JwYy1nYXRld2F5MmoKFGNhbWVs",
            "Q2FzZVNlcnZpY2VOYW1lElIKBUVtcHR5EhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IhmC0+STAhMSES92Mi9leGFt",
            "cGxlL2VtcHR5Ml4KHEFub3RoZXJTZXJ2aWNlV2l0aE5vQmluZGluZ3MSPgoK",
            "Tm9CaW5kaW5ncxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIAQoEFWglleGFtcGxlcGKSQfIEEnQKE0EgQml0IG9m",
            "IEV2ZXJ5dGhpbmciWAoUZ1JQQy1HYXRld2F5IHByb2plY3QSLmh0dHBzOi8v",
            "Z2l0aHViLmNvbS9ncnBjLWVjb3N5c3RlbS9ncnBjLWdhdGV3YXkaEG5vbmVA",
            "ZXhhbXBsZS5jb20yAzEuMCoDAQIEMhBhcHBsaWNhdGlvbi9qc29uMhZhcHBs",
            "aWNhdGlvbi94LWZvby1taW1lOhBhcHBsaWNhdGlvbi9qc29uOhZhcHBsaWNh",
            "dGlvbi94LWZvby1taW1lWokCCg8KCUJhc2ljQXV0aBICCAEKHQoKQXBpS2V5",
            "QXV0aBIPCAIaCVgtQVBJLUtleSACCtYBCgZPQXV0aDISywEIAygEMiNodHRw",
            "czovL2V4YW1wbGUuY29tL29hdXRoL2F1dGhvcml6ZTofaHR0cHM6Ly9leGFt",
            "cGxlLmNvbS9vYXV0aC90b2tlbkJ/ChoKBHJlYWQSEkdyYW50cyByZWFkIGFj",
            "Y2VzcwocCgV3cml0ZRITR3JhbnRzIHdyaXRlIGFjY2VzcwpDCgVhZG1pbhI6",
            "R3JhbnRzIHJlYWQgYW5kIHdyaXRlIGFjY2VzcyB0byBhZG1pbmlzdHJhdGl2",
            "ZSBpbmZvcm1hdGlvbmIfCg0KCUJhc2ljQXV0aBIACg4KCkFwaUtleUF1dGgS",
            "AGIpChcKBk9BdXRoMhINCgRyZWFkCgV3cml0ZQoOCgpBcGlLZXlBdXRoEgBy",
            "SQoXTW9yZSBhYm91dCBnUlBDLUdhdGV3YXkSLmh0dHBzOi8vZ2l0aHViLmNv",
            "bS9ncnBjLWVjb3N5c3RlbS9ncnBjLWdhdGV3YXliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Grpc.Gateway.Examples.Sub.MessageReflection.Descriptor, global::Sub2.MessageReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Grpc.Gateway.Examples.Examplepb.NumericEnum), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything), global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Parser, new[]{ "SingleNested", "Uuid", "Nested", "FloatValue", "DoubleValue", "Int64Value", "Uint64Value", "Int32Value", "Fixed64Value", "Fixed32Value", "BoolValue", "StringValue", "BytesValue", "Uint32Value", "EnumValue", "Sfixed32Value", "Sfixed64Value", "Sint32Value", "Sint64Value", "RepeatedStringValue", "OneofEmpty", "OneofString", "MapValue", "MappedStringValue", "MappedNestedValue", "NonConventionalNameValue", "TimestampValue", "RepeatedEnumValue" }, new[]{ "OneofValue" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested), global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested.Parser, new[]{ "Name", "Amount", "Ok" }, null, new[]{ typeof(global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested.Types.DeepEnum) }, null),
            null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Gateway.Examples.Examplepb.Body), global::Grpc.Gateway.Examples.Examplepb.Body.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Gateway.Examples.Examplepb.MessageWithBody), global::Grpc.Gateway.Examples.Examplepb.MessageWithBody.Parser, new[]{ "Id", "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// NumericEnum is one or zero.
  /// </summary>
  public enum NumericEnum {
    /// <summary>
    /// ZERO means 0
    /// </summary>
    [pbr::OriginalName("ZERO")] Zero = 0,
    /// <summary>
    /// ONE means 1
    /// </summary>
    [pbr::OriginalName("ONE")] One = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Intentionaly complicated message type to cover much features of Protobuf.
  /// NEXT ID: 30
  /// </summary>
  public sealed partial class ABitOfEverything : pb::IMessage<ABitOfEverything> {
    private static readonly pb::MessageParser<ABitOfEverything> _parser = new pb::MessageParser<ABitOfEverything>(() => new ABitOfEverything());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ABitOfEverything> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Gateway.Examples.Examplepb.ABitOfEverythingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ABitOfEverything() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ABitOfEverything(ABitOfEverything other) : this() {
      SingleNested = other.singleNested_ != null ? other.SingleNested.Clone() : null;
      uuid_ = other.uuid_;
      nested_ = other.nested_.Clone();
      floatValue_ = other.floatValue_;
      doubleValue_ = other.doubleValue_;
      int64Value_ = other.int64Value_;
      uint64Value_ = other.uint64Value_;
      int32Value_ = other.int32Value_;
      fixed64Value_ = other.fixed64Value_;
      fixed32Value_ = other.fixed32Value_;
      boolValue_ = other.boolValue_;
      stringValue_ = other.stringValue_;
      bytesValue_ = other.bytesValue_;
      uint32Value_ = other.uint32Value_;
      enumValue_ = other.enumValue_;
      sfixed32Value_ = other.sfixed32Value_;
      sfixed64Value_ = other.sfixed64Value_;
      sint32Value_ = other.sint32Value_;
      sint64Value_ = other.sint64Value_;
      repeatedStringValue_ = other.repeatedStringValue_.Clone();
      mapValue_ = other.mapValue_.Clone();
      mappedStringValue_ = other.mappedStringValue_.Clone();
      mappedNestedValue_ = other.mappedNestedValue_.Clone();
      nonConventionalNameValue_ = other.nonConventionalNameValue_;
      TimestampValue = other.timestampValue_ != null ? other.TimestampValue.Clone() : null;
      repeatedEnumValue_ = other.repeatedEnumValue_.Clone();
      switch (other.OneofValueCase) {
        case OneofValueOneofCase.OneofEmpty:
          OneofEmpty = other.OneofEmpty.Clone();
          break;
        case OneofValueOneofCase.OneofString:
          OneofString = other.OneofString;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ABitOfEverything Clone() {
      return new ABitOfEverything(this);
    }

    /// <summary>Field number for the "single_nested" field.</summary>
    public const int SingleNestedFieldNumber = 25;
    private global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested singleNested_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested SingleNested {
      get { return singleNested_; }
      set {
        singleNested_ = value;
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nested" field.</summary>
    public const int NestedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested> _repeated_nested_codec
        = pb::FieldCodec.ForMessage(18, global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested.Parser);
    private readonly pbc::RepeatedField<global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested> nested_ = new pbc::RepeatedField<global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested> Nested {
      get { return nested_; }
    }

    /// <summary>Field number for the "float_value" field.</summary>
    public const int FloatValueFieldNumber = 3;
    private float floatValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FloatValue {
      get { return floatValue_; }
      set {
        floatValue_ = value;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 4;
    private double doubleValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return doubleValue_; }
      set {
        doubleValue_ = value;
      }
    }

    /// <summary>Field number for the "int64_value" field.</summary>
    public const int Int64ValueFieldNumber = 5;
    private long int64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int64Value {
      get { return int64Value_; }
      set {
        int64Value_ = value;
      }
    }

    /// <summary>Field number for the "uint64_value" field.</summary>
    public const int Uint64ValueFieldNumber = 6;
    private ulong uint64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uint64Value {
      get { return uint64Value_; }
      set {
        uint64Value_ = value;
      }
    }

    /// <summary>Field number for the "int32_value" field.</summary>
    public const int Int32ValueFieldNumber = 7;
    private int int32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int32Value {
      get { return int32Value_; }
      set {
        int32Value_ = value;
      }
    }

    /// <summary>Field number for the "fixed64_value" field.</summary>
    public const int Fixed64ValueFieldNumber = 8;
    private ulong fixed64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Fixed64Value {
      get { return fixed64Value_; }
      set {
        fixed64Value_ = value;
      }
    }

    /// <summary>Field number for the "fixed32_value" field.</summary>
    public const int Fixed32ValueFieldNumber = 9;
    private uint fixed32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Fixed32Value {
      get { return fixed32Value_; }
      set {
        fixed32Value_ = value;
      }
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 10;
    private bool boolValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolValue {
      get { return boolValue_; }
      set {
        boolValue_ = value;
      }
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 11;
    private string stringValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return stringValue_; }
      set {
        stringValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bytes_value" field.</summary>
    public const int BytesValueFieldNumber = 29;
    private pb::ByteString bytesValue_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BytesValue {
      get { return bytesValue_; }
      set {
        bytesValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uint32_value" field.</summary>
    public const int Uint32ValueFieldNumber = 13;
    private uint uint32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uint32Value {
      get { return uint32Value_; }
      set {
        uint32Value_ = value;
      }
    }

    /// <summary>Field number for the "enum_value" field.</summary>
    public const int EnumValueFieldNumber = 14;
    private global::Grpc.Gateway.Examples.Examplepb.NumericEnum enumValue_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Gateway.Examples.Examplepb.NumericEnum EnumValue {
      get { return enumValue_; }
      set {
        enumValue_ = value;
      }
    }

    /// <summary>Field number for the "sfixed32_value" field.</summary>
    public const int Sfixed32ValueFieldNumber = 15;
    private int sfixed32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sfixed32Value {
      get { return sfixed32Value_; }
      set {
        sfixed32Value_ = value;
      }
    }

    /// <summary>Field number for the "sfixed64_value" field.</summary>
    public const int Sfixed64ValueFieldNumber = 16;
    private long sfixed64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sfixed64Value {
      get { return sfixed64Value_; }
      set {
        sfixed64Value_ = value;
      }
    }

    /// <summary>Field number for the "sint32_value" field.</summary>
    public const int Sint32ValueFieldNumber = 17;
    private int sint32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sint32Value {
      get { return sint32Value_; }
      set {
        sint32Value_ = value;
      }
    }

    /// <summary>Field number for the "sint64_value" field.</summary>
    public const int Sint64ValueFieldNumber = 18;
    private long sint64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sint64Value {
      get { return sint64Value_; }
      set {
        sint64Value_ = value;
      }
    }

    /// <summary>Field number for the "repeated_string_value" field.</summary>
    public const int RepeatedStringValueFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _repeated_repeatedStringValue_codec
        = pb::FieldCodec.ForString(154);
    private readonly pbc::RepeatedField<string> repeatedStringValue_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RepeatedStringValue {
      get { return repeatedStringValue_; }
    }

    /// <summary>Field number for the "oneof_empty" field.</summary>
    public const int OneofEmptyFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Empty OneofEmpty {
      get { return oneofValueCase_ == OneofValueOneofCase.OneofEmpty ? (global::Google.Protobuf.WellKnownTypes.Empty) oneofValue_ : null; }
      set {
        oneofValue_ = value;
        oneofValueCase_ = value == null ? OneofValueOneofCase.None : OneofValueOneofCase.OneofEmpty;
      }
    }

    /// <summary>Field number for the "oneof_string" field.</summary>
    public const int OneofStringFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OneofString {
      get { return oneofValueCase_ == OneofValueOneofCase.OneofString ? (string) oneofValue_ : ""; }
      set {
        oneofValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        oneofValueCase_ = OneofValueOneofCase.OneofString;
      }
    }

    /// <summary>Field number for the "map_value" field.</summary>
    public const int MapValueFieldNumber = 22;
    private static readonly pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.NumericEnum>.Codec _map_mapValue_codec
        = new pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.NumericEnum>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::Grpc.Gateway.Examples.Examplepb.NumericEnum) x), 178);
    private readonly pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.NumericEnum> mapValue_ = new pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.NumericEnum>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.NumericEnum> MapValue {
      get { return mapValue_; }
    }

    /// <summary>Field number for the "mapped_string_value" field.</summary>
    public const int MappedStringValueFieldNumber = 23;
    private static readonly pbc::MapField<string, string>.Codec _map_mappedStringValue_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 186);
    private readonly pbc::MapField<string, string> mappedStringValue_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> MappedStringValue {
      get { return mappedStringValue_; }
    }

    /// <summary>Field number for the "mapped_nested_value" field.</summary>
    public const int MappedNestedValueFieldNumber = 24;
    private static readonly pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested>.Codec _map_mappedNestedValue_codec
        = new pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested.Parser), 194);
    private readonly pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested> mappedNestedValue_ = new pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested> MappedNestedValue {
      get { return mappedNestedValue_; }
    }

    /// <summary>Field number for the "nonConventionalNameValue" field.</summary>
    public const int NonConventionalNameValueFieldNumber = 26;
    private string nonConventionalNameValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NonConventionalNameValue {
      get { return nonConventionalNameValue_; }
      set {
        nonConventionalNameValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp_value" field.</summary>
    public const int TimestampValueFieldNumber = 27;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestampValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimestampValue {
      get { return timestampValue_; }
      set {
        timestampValue_ = value;
      }
    }

    /// <summary>Field number for the "repeated_enum_value" field.</summary>
    public const int RepeatedEnumValueFieldNumber = 28;
    private static readonly pb::FieldCodec<global::Grpc.Gateway.Examples.Examplepb.NumericEnum> _repeated_repeatedEnumValue_codec
        = pb::FieldCodec.ForEnum(226, x => (int) x, x => (global::Grpc.Gateway.Examples.Examplepb.NumericEnum) x);
    private readonly pbc::RepeatedField<global::Grpc.Gateway.Examples.Examplepb.NumericEnum> repeatedEnumValue_ = new pbc::RepeatedField<global::Grpc.Gateway.Examples.Examplepb.NumericEnum>();
    /// <summary>
    /// repeated enum value. it is comma-separated in query
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.Gateway.Examples.Examplepb.NumericEnum> RepeatedEnumValue {
      get { return repeatedEnumValue_; }
    }

    private object oneofValue_;
    /// <summary>Enum of possible cases for the "oneof_value" oneof.</summary>
    public enum OneofValueOneofCase {
      None = 0,
      OneofEmpty = 20,
      OneofString = 21,
    }
    private OneofValueOneofCase oneofValueCase_ = OneofValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofValueOneofCase OneofValueCase {
      get { return oneofValueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofValue() {
      oneofValueCase_ = OneofValueOneofCase.None;
      oneofValue_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ABitOfEverything);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ABitOfEverything other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SingleNested, other.SingleNested)) return false;
      if (Uuid != other.Uuid) return false;
      if(!nested_.Equals(other.nested_)) return false;
      if (FloatValue != other.FloatValue) return false;
      if (DoubleValue != other.DoubleValue) return false;
      if (Int64Value != other.Int64Value) return false;
      if (Uint64Value != other.Uint64Value) return false;
      if (Int32Value != other.Int32Value) return false;
      if (Fixed64Value != other.Fixed64Value) return false;
      if (Fixed32Value != other.Fixed32Value) return false;
      if (BoolValue != other.BoolValue) return false;
      if (StringValue != other.StringValue) return false;
      if (BytesValue != other.BytesValue) return false;
      if (Uint32Value != other.Uint32Value) return false;
      if (EnumValue != other.EnumValue) return false;
      if (Sfixed32Value != other.Sfixed32Value) return false;
      if (Sfixed64Value != other.Sfixed64Value) return false;
      if (Sint32Value != other.Sint32Value) return false;
      if (Sint64Value != other.Sint64Value) return false;
      if(!repeatedStringValue_.Equals(other.repeatedStringValue_)) return false;
      if (!object.Equals(OneofEmpty, other.OneofEmpty)) return false;
      if (OneofString != other.OneofString) return false;
      if (!MapValue.Equals(other.MapValue)) return false;
      if (!MappedStringValue.Equals(other.MappedStringValue)) return false;
      if (!MappedNestedValue.Equals(other.MappedNestedValue)) return false;
      if (NonConventionalNameValue != other.NonConventionalNameValue) return false;
      if (!object.Equals(TimestampValue, other.TimestampValue)) return false;
      if(!repeatedEnumValue_.Equals(other.repeatedEnumValue_)) return false;
      if (OneofValueCase != other.OneofValueCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (singleNested_ != null) hash ^= SingleNested.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      hash ^= nested_.GetHashCode();
      if (FloatValue != 0F) hash ^= FloatValue.GetHashCode();
      if (DoubleValue != 0D) hash ^= DoubleValue.GetHashCode();
      if (Int64Value != 0L) hash ^= Int64Value.GetHashCode();
      if (Uint64Value != 0UL) hash ^= Uint64Value.GetHashCode();
      if (Int32Value != 0) hash ^= Int32Value.GetHashCode();
      if (Fixed64Value != 0UL) hash ^= Fixed64Value.GetHashCode();
      if (Fixed32Value != 0) hash ^= Fixed32Value.GetHashCode();
      if (BoolValue != false) hash ^= BoolValue.GetHashCode();
      if (StringValue.Length != 0) hash ^= StringValue.GetHashCode();
      if (BytesValue.Length != 0) hash ^= BytesValue.GetHashCode();
      if (Uint32Value != 0) hash ^= Uint32Value.GetHashCode();
      if (EnumValue != 0) hash ^= EnumValue.GetHashCode();
      if (Sfixed32Value != 0) hash ^= Sfixed32Value.GetHashCode();
      if (Sfixed64Value != 0L) hash ^= Sfixed64Value.GetHashCode();
      if (Sint32Value != 0) hash ^= Sint32Value.GetHashCode();
      if (Sint64Value != 0L) hash ^= Sint64Value.GetHashCode();
      hash ^= repeatedStringValue_.GetHashCode();
      if (oneofValueCase_ == OneofValueOneofCase.OneofEmpty) hash ^= OneofEmpty.GetHashCode();
      if (oneofValueCase_ == OneofValueOneofCase.OneofString) hash ^= OneofString.GetHashCode();
      hash ^= MapValue.GetHashCode();
      hash ^= MappedStringValue.GetHashCode();
      hash ^= MappedNestedValue.GetHashCode();
      if (NonConventionalNameValue.Length != 0) hash ^= NonConventionalNameValue.GetHashCode();
      if (timestampValue_ != null) hash ^= TimestampValue.GetHashCode();
      hash ^= repeatedEnumValue_.GetHashCode();
      hash ^= (int) oneofValueCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      nested_.WriteTo(output, _repeated_nested_codec);
      if (FloatValue != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(FloatValue);
      }
      if (DoubleValue != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(DoubleValue);
      }
      if (Int64Value != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Int64Value);
      }
      if (Uint64Value != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Uint64Value);
      }
      if (Int32Value != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Int32Value);
      }
      if (Fixed64Value != 0UL) {
        output.WriteRawTag(65);
        output.WriteFixed64(Fixed64Value);
      }
      if (Fixed32Value != 0) {
        output.WriteRawTag(77);
        output.WriteFixed32(Fixed32Value);
      }
      if (BoolValue != false) {
        output.WriteRawTag(80);
        output.WriteBool(BoolValue);
      }
      if (StringValue.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StringValue);
      }
      if (Uint32Value != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Uint32Value);
      }
      if (EnumValue != 0) {
        output.WriteRawTag(112);
        output.WriteEnum((int) EnumValue);
      }
      if (Sfixed32Value != 0) {
        output.WriteRawTag(125);
        output.WriteSFixed32(Sfixed32Value);
      }
      if (Sfixed64Value != 0L) {
        output.WriteRawTag(129, 1);
        output.WriteSFixed64(Sfixed64Value);
      }
      if (Sint32Value != 0) {
        output.WriteRawTag(136, 1);
        output.WriteSInt32(Sint32Value);
      }
      if (Sint64Value != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteSInt64(Sint64Value);
      }
      repeatedStringValue_.WriteTo(output, _repeated_repeatedStringValue_codec);
      if (oneofValueCase_ == OneofValueOneofCase.OneofEmpty) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(OneofEmpty);
      }
      if (oneofValueCase_ == OneofValueOneofCase.OneofString) {
        output.WriteRawTag(170, 1);
        output.WriteString(OneofString);
      }
      mapValue_.WriteTo(output, _map_mapValue_codec);
      mappedStringValue_.WriteTo(output, _map_mappedStringValue_codec);
      mappedNestedValue_.WriteTo(output, _map_mappedNestedValue_codec);
      if (singleNested_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(SingleNested);
      }
      if (NonConventionalNameValue.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(NonConventionalNameValue);
      }
      if (timestampValue_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(TimestampValue);
      }
      repeatedEnumValue_.WriteTo(output, _repeated_repeatedEnumValue_codec);
      if (BytesValue.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteBytes(BytesValue);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (singleNested_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SingleNested);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      size += nested_.CalculateSize(_repeated_nested_codec);
      if (FloatValue != 0F) {
        size += 1 + 4;
      }
      if (DoubleValue != 0D) {
        size += 1 + 8;
      }
      if (Int64Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Int64Value);
      }
      if (Uint64Value != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Uint64Value);
      }
      if (Int32Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Int32Value);
      }
      if (Fixed64Value != 0UL) {
        size += 1 + 8;
      }
      if (Fixed32Value != 0) {
        size += 1 + 4;
      }
      if (BoolValue != false) {
        size += 1 + 1;
      }
      if (StringValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (BytesValue.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(BytesValue);
      }
      if (Uint32Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uint32Value);
      }
      if (EnumValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnumValue);
      }
      if (Sfixed32Value != 0) {
        size += 1 + 4;
      }
      if (Sfixed64Value != 0L) {
        size += 2 + 8;
      }
      if (Sint32Value != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(Sint32Value);
      }
      if (Sint64Value != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeSInt64Size(Sint64Value);
      }
      size += repeatedStringValue_.CalculateSize(_repeated_repeatedStringValue_codec);
      if (oneofValueCase_ == OneofValueOneofCase.OneofEmpty) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OneofEmpty);
      }
      if (oneofValueCase_ == OneofValueOneofCase.OneofString) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OneofString);
      }
      size += mapValue_.CalculateSize(_map_mapValue_codec);
      size += mappedStringValue_.CalculateSize(_map_mappedStringValue_codec);
      size += mappedNestedValue_.CalculateSize(_map_mappedNestedValue_codec);
      if (NonConventionalNameValue.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NonConventionalNameValue);
      }
      if (timestampValue_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimestampValue);
      }
      size += repeatedEnumValue_.CalculateSize(_repeated_repeatedEnumValue_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ABitOfEverything other) {
      if (other == null) {
        return;
      }
      if (other.singleNested_ != null) {
        if (singleNested_ == null) {
          singleNested_ = new global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested();
        }
        SingleNested.MergeFrom(other.SingleNested);
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      nested_.Add(other.nested_);
      if (other.FloatValue != 0F) {
        FloatValue = other.FloatValue;
      }
      if (other.DoubleValue != 0D) {
        DoubleValue = other.DoubleValue;
      }
      if (other.Int64Value != 0L) {
        Int64Value = other.Int64Value;
      }
      if (other.Uint64Value != 0UL) {
        Uint64Value = other.Uint64Value;
      }
      if (other.Int32Value != 0) {
        Int32Value = other.Int32Value;
      }
      if (other.Fixed64Value != 0UL) {
        Fixed64Value = other.Fixed64Value;
      }
      if (other.Fixed32Value != 0) {
        Fixed32Value = other.Fixed32Value;
      }
      if (other.BoolValue != false) {
        BoolValue = other.BoolValue;
      }
      if (other.StringValue.Length != 0) {
        StringValue = other.StringValue;
      }
      if (other.BytesValue.Length != 0) {
        BytesValue = other.BytesValue;
      }
      if (other.Uint32Value != 0) {
        Uint32Value = other.Uint32Value;
      }
      if (other.EnumValue != 0) {
        EnumValue = other.EnumValue;
      }
      if (other.Sfixed32Value != 0) {
        Sfixed32Value = other.Sfixed32Value;
      }
      if (other.Sfixed64Value != 0L) {
        Sfixed64Value = other.Sfixed64Value;
      }
      if (other.Sint32Value != 0) {
        Sint32Value = other.Sint32Value;
      }
      if (other.Sint64Value != 0L) {
        Sint64Value = other.Sint64Value;
      }
      repeatedStringValue_.Add(other.repeatedStringValue_);
      mapValue_.Add(other.mapValue_);
      mappedStringValue_.Add(other.mappedStringValue_);
      mappedNestedValue_.Add(other.mappedNestedValue_);
      if (other.NonConventionalNameValue.Length != 0) {
        NonConventionalNameValue = other.NonConventionalNameValue;
      }
      if (other.timestampValue_ != null) {
        if (timestampValue_ == null) {
          timestampValue_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TimestampValue.MergeFrom(other.TimestampValue);
      }
      repeatedEnumValue_.Add(other.repeatedEnumValue_);
      switch (other.OneofValueCase) {
        case OneofValueOneofCase.OneofEmpty:
          OneofEmpty = other.OneofEmpty;
          break;
        case OneofValueOneofCase.OneofString:
          OneofString = other.OneofString;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            nested_.AddEntriesFrom(input, _repeated_nested_codec);
            break;
          }
          case 29: {
            FloatValue = input.ReadFloat();
            break;
          }
          case 33: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 40: {
            Int64Value = input.ReadInt64();
            break;
          }
          case 48: {
            Uint64Value = input.ReadUInt64();
            break;
          }
          case 56: {
            Int32Value = input.ReadInt32();
            break;
          }
          case 65: {
            Fixed64Value = input.ReadFixed64();
            break;
          }
          case 77: {
            Fixed32Value = input.ReadFixed32();
            break;
          }
          case 80: {
            BoolValue = input.ReadBool();
            break;
          }
          case 90: {
            StringValue = input.ReadString();
            break;
          }
          case 104: {
            Uint32Value = input.ReadUInt32();
            break;
          }
          case 112: {
            enumValue_ = (global::Grpc.Gateway.Examples.Examplepb.NumericEnum) input.ReadEnum();
            break;
          }
          case 125: {
            Sfixed32Value = input.ReadSFixed32();
            break;
          }
          case 129: {
            Sfixed64Value = input.ReadSFixed64();
            break;
          }
          case 136: {
            Sint32Value = input.ReadSInt32();
            break;
          }
          case 144: {
            Sint64Value = input.ReadSInt64();
            break;
          }
          case 154: {
            repeatedStringValue_.AddEntriesFrom(input, _repeated_repeatedStringValue_codec);
            break;
          }
          case 162: {
            global::Google.Protobuf.WellKnownTypes.Empty subBuilder = new global::Google.Protobuf.WellKnownTypes.Empty();
            if (oneofValueCase_ == OneofValueOneofCase.OneofEmpty) {
              subBuilder.MergeFrom(OneofEmpty);
            }
            input.ReadMessage(subBuilder);
            OneofEmpty = subBuilder;
            break;
          }
          case 170: {
            OneofString = input.ReadString();
            break;
          }
          case 178: {
            mapValue_.AddEntriesFrom(input, _map_mapValue_codec);
            break;
          }
          case 186: {
            mappedStringValue_.AddEntriesFrom(input, _map_mappedStringValue_codec);
            break;
          }
          case 194: {
            mappedNestedValue_.AddEntriesFrom(input, _map_mappedNestedValue_codec);
            break;
          }
          case 202: {
            if (singleNested_ == null) {
              singleNested_ = new global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested();
            }
            input.ReadMessage(singleNested_);
            break;
          }
          case 210: {
            NonConventionalNameValue = input.ReadString();
            break;
          }
          case 218: {
            if (timestampValue_ == null) {
              timestampValue_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestampValue_);
            break;
          }
          case 226:
          case 224: {
            repeatedEnumValue_.AddEntriesFrom(input, _repeated_repeatedEnumValue_codec);
            break;
          }
          case 234: {
            BytesValue = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ABitOfEverything message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Nested is nested type.
      /// </summary>
      public sealed partial class Nested : pb::IMessage<Nested> {
        private static readonly pb::MessageParser<Nested> _parser = new pb::MessageParser<Nested>(() => new Nested());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Nested> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Nested() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Nested(Nested other) : this() {
          name_ = other.name_;
          amount_ = other.amount_;
          ok_ = other.ok_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Nested Clone() {
          return new Nested(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// name is nested field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "amount" field.</summary>
        public const int AmountFieldNumber = 2;
        private uint amount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Amount {
          get { return amount_; }
          set {
            amount_ = value;
          }
        }

        /// <summary>Field number for the "ok" field.</summary>
        public const int OkFieldNumber = 3;
        private global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested.Types.DeepEnum ok_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested.Types.DeepEnum Ok {
          get { return ok_; }
          set {
            ok_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Nested);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Nested other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Amount != other.Amount) return false;
          if (Ok != other.Ok) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Amount != 0) hash ^= Amount.GetHashCode();
          if (Ok != 0) hash ^= Ok.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Amount != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Amount);
          }
          if (Ok != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Ok);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Amount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
          }
          if (Ok != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ok);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Nested other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Amount != 0) {
            Amount = other.Amount;
          }
          if (other.Ok != 0) {
            Ok = other.Ok;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Amount = input.ReadUInt32();
                break;
              }
              case 24: {
                ok_ = (global::Grpc.Gateway.Examples.Examplepb.ABitOfEverything.Types.Nested.Types.DeepEnum) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Nested message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// DeepEnum is one or zero.
          /// </summary>
          public enum DeepEnum {
            /// <summary>
            /// FALSE is false.
            /// </summary>
            [pbr::OriginalName("FALSE")] False = 0,
            /// <summary>
            /// TRUE is true.
            /// </summary>
            [pbr::OriginalName("TRUE")] True = 1,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class Body : pb::IMessage<Body> {
    private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Body> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Gateway.Examples.Examplepb.ABitOfEverythingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body(Body other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body Clone() {
      return new Body(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Body);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Body other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Body other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageWithBody : pb::IMessage<MessageWithBody> {
    private static readonly pb::MessageParser<MessageWithBody> _parser = new pb::MessageParser<MessageWithBody>(() => new MessageWithBody());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageWithBody> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Gateway.Examples.Examplepb.ABitOfEverythingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageWithBody() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageWithBody(MessageWithBody other) : this() {
      id_ = other.id_;
      Data = other.data_ != null ? other.Data.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageWithBody Clone() {
      return new MessageWithBody(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::Grpc.Gateway.Examples.Examplepb.Body data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Gateway.Examples.Examplepb.Body Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageWithBody);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageWithBody other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageWithBody other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Grpc.Gateway.Examples.Examplepb.Body();
        }
        Data.MergeFrom(other.Data);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (data_ == null) {
              data_ = new global::Grpc.Gateway.Examples.Examplepb.Body();
            }
            input.ReadMessage(data_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
